<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="inquiryMapper">

    <!-- 문의 등록 -->
    <insert id="create" parameterType="com.example.spring.inquiry.InquiryDto">
        <selectKey keyProperty="inquiryId" resultType="long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO inquiry (
            user_id, 
            username, 
            title, 
            content, 
            category, 
            email,
            is_secret,
            status, 
            created_date
        ) VALUES (
            #{userId}, 
            #{username}, 
            #{title}, 
            #{content}, 
            #{category}, 
            #{email},
            #{isSecret},
            #{status}, 
            #{createdDate}
        )
    </insert>

    <!-- 문의 단건 조회 -->
    <select id="read" parameterType="long" resultType="com.example.spring.inquiry.InquiryDto">
        SELECT 
            inquiry_id as inquiryId,
            user_id as userId,
            username as username,
            title as title,
            content as content,
            category as category,
            email as email,
            is_secret as isSecret,
            status as status,
            reply_content as replyContent,
            reply_by as replyBy,
            reply_date as replyDate,
            created_date as createdDate,
            updated_date as updatedDate
        FROM inquiry
        WHERE inquiry_id = #{inquiryId}
    </select>

    <!-- 문의 목록 조회 (페이징 포함) -->
    <select id="list" parameterType="map" resultType="com.example.spring.inquiry.InquiryDto">
        SELECT 
            inquiry_id as inquiryId,
            user_id as userId,
            username as username,
            title as title,
            content as content,
            category as category,
            email as email,
            is_secret as isSecret,
            status as status,
            reply_content as replyContent,
            reply_by as replyBy,
            reply_date as replyDate,
            created_date as createdDate,
            updated_date as updatedDate
        FROM inquiry
        <where>
            <if test="search != null and search != ''">
                AND (title LIKE CONCAT('%', #{search}, '%') OR content LIKE CONCAT('%', #{search}, '%'))
            </if>
            <if test="category != null and category != ''">
                AND category = #{category}
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="userId != null and userId != ''">
                AND user_id = #{userId}
            </if>
        </where>
        ORDER BY inquiry_id DESC
        <if test="limit != null and offset != null">
            LIMIT #{offset}, #{limit}
        </if>
    </select>

    <!-- 사용자별 문의 목록 조회 -->
    <select id="listByUser" parameterType="map" resultType="com.example.spring.inquiry.InquiryDto">
        SELECT 
            inquiry_id as inquiryId,
            user_id as userId,
            username as username,
            title as title,
            content as content,
            category as category,
            email as email,
            is_secret as isSecret,
            status as status,
            reply_content as replyContent,
            reply_by as replyBy,
            reply_date as replyDate,
            created_date as createdDate,
            updated_date as updatedDate
        FROM inquiry
        WHERE user_id = #{userId}
        ORDER BY inquiry_id DESC
        <if test="limit != null and offset != null">
            LIMIT #{offset}, #{limit}
        </if>
    </select>

    <!-- 전체 문의 개수 조회 -->
    <select id="count" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM inquiry
        <where>
            <if test="search != null and search != ''">
                AND (title LIKE CONCAT('%', #{search}, '%') OR content LIKE CONCAT('%', #{search}, '%'))
            </if>
            <if test="category != null and category != ''">
                AND category = #{category}
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="userId != null and userId != ''">
                AND user_id = #{userId}
            </if>
        </where>
    </select>

    <!-- 문의 수정 -->
    <update id="update" parameterType="com.example.spring.inquiry.InquiryDto">
        UPDATE inquiry
        <set>
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="category != null and category != ''">
                category = #{category},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="isSecret != null">
                is_secret = #{isSecret},
            </if>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
            <if test="updatedDate != null">
                updated_date = #{updatedDate}
            </if>
            <if test="updatedDate == null">
                updated_date = NOW()
            </if>
        </set>
        WHERE inquiry_id = #{inquiryId}
    </update>

    <!-- 관리자 답변 등록/수정 -->
    <update id="reply" parameterType="com.example.spring.inquiry.InquiryDto">
        UPDATE inquiry
        SET 
            reply_content = #{replyContent},
            reply_by = #{replyBy},
            reply_date = #{replyDate},
            status = #{status},
            updated_date = NOW()
        WHERE inquiry_id = #{inquiryId}
    </update>

    <!-- 문의 삭제 -->
    <delete id="delete" parameterType="long">
        DELETE FROM inquiry
        WHERE inquiry_id = #{inquiryId}
    </delete>

</mapper>